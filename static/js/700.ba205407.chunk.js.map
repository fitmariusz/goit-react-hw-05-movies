{"version":3,"file":"static/js/700.ba205407.chunk.js","mappings":"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","sources":["components/utils/api/getMovieFromId.js","components/utils/api/fetchMovieFromId.js","Pages/Card.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getMovieFromId = Id => async () => {\n  console.log(Id);\n  const API_KEY = '064bc5fa04e70ee06b5bfcffdd0028ff'\n  const query = `https://api.themoviedb.org/3/movie/${Id}?api_key=${API_KEY}`\n  const response = await fetch(query)\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n\n  return response.json();\n};","import { useQuery } from 'react-query'\nimport { getMovieFromId } from './getMovieFromId'\nimport {Suspense } from 'react';\nimport { Link, Outlet} from 'react-router-dom';\n\n\nexport const FetchMovieFromId = ({ Id }) => {\n  //  const backLinkHref = location.state?.from ?? '/movies';\n  // console.log(Id);\n    const { data: movieDetails, isLoading, error } = useQuery({ queryKey: ['getId'], queryFn: getMovieFromId(Id)});\n  return <>\n        {error && <p>Something went wrong: {error.message}</p>}\n        {isLoading && <p>Loading...</p>}\n    {!isLoading && !error && \n     <div>\n      {/* <BackLink to={backLinkHref}>Back to Movies</BackLink> */}\n      <div >\n        <img\n          src={\n            movieDetails.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n                : `https://as2.ftcdn.net/v2/jpg/04/00/24/31/1000_F_400243185_BOxON3h9avMUX10RsDkt3pJ8iQx72kS3.jpg`\n              // defaultImg\n          }\n            width={ 200}\n          alt=\"film poster\"\n        />\n        <div >\n          <h2>{movieDetails.title || movieDetails.name}</h2>\n          <p>User Score: {movieDetails.vote_average}</p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {movieDetails.genres &&\n              movieDetails.genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n      <div >\n        <h3>Additional Details</h3>\n        <nav >\n          <Link\n            // className={navData => (navData.isActive ? css.active : css.link)}\n            to=\"Cast\"\n          >\n            Cast\n          </Link>\n          <Link\n            // className={navData => (navData.isActive ? css.active : css.link)}\n            to=\"Reviews\"\n          >\n            Reviews\n          </Link>\n        </nav>\n      </div>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n    \n    \n    \n    \n    }\n  </>\n}","import { FetchMovieFromId } from \"components/utils/api/fetchMovieFromId\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useParams} from 'react-router-dom';\n// import { useEffect, useState, Suspense } from 'react';\n\n// location.state?.from ?? \nconst Card = () => {\n   const  backLinkHref= useLocation().state?.from ?? \"/Moves\";\n    const { idMovie} = useParams();\n    \n  return (\n    <main>\n      <Link to={backLinkHref}>Go beck</Link>\n      <FetchMovieFromId Id={idMovie}></FetchMovieFromId>\n    </main>\n  );\n};\n\nexport default Card;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["getMovieFromId","Id","_asyncToGenerator","_regeneratorRuntime","_callee","query","response","_context","prev","next","console","log","concat","fetch","sent","ok","Error","abrupt","json","stop","FetchMovieFromId","_ref","_useQuery","useQuery","queryKey","queryFn","movieDetails","data","isLoading","error","_jsxs","_Fragment","children","message","_jsx","src","poster_path","width","alt","title","name","vote_average","overview","genres","map","genre","join","Link","to","Suspense","fallback","Outlet","_useLocation$state$fr","_useLocation$state","backLinkHref","useLocation","state","from","idMovie","useParams","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}