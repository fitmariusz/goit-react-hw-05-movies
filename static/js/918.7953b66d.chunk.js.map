{"version":3,"file":"static/js/918.7953b66d.chunk.js","mappings":"qPAAaA,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGsE,MAD/E,mCACVJ,EAAK,0EAAAK,OADK,oCAC+EH,EAAAE,KAAA,EACxEE,MAAMN,GAAM,OAArB,IAARC,EAAQC,EAAAK,MACAC,GAAG,CAADN,EAAAE,KAAA,cACR,IAAIK,MAAM,+BAA+B,KAAD,SAAAP,EAAAQ,OAAA,SAGzCT,EAASU,QAAM,wBAAAT,EAAAU,OAAA,GAAAb,EAAA,KACvB,kBAVuB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,K,SCKXC,E,QAAKC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6B,SCEdC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACfC,GAAmDC,EAAAA,EAAAA,UAAS,CAAEC,SAAU,CAAC,OAAQC,QAAS9B,IAA5E+B,EAAcJ,EAApBK,KAAsBC,EAASN,EAATM,UAAWC,EAAKP,EAALO,MAC3C,OAAOC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEAH,IAASC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,yBAAuBH,EAAMI,WAC7CL,IAAaM,EAAAA,EAAAA,KAAA,KAAAF,SAAG,gBACfJ,IAAcC,GACdH,EAAeS,QAAQC,KAAI,SAAAxC,GAAA,IAAGyC,EAAEzC,EAAFyC,GAAIC,EAAK1C,EAAL0C,MAAK,OACvCJ,EAAAA,EAAAA,KAACnB,EAAE,CAAAiB,UACDE,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,WAAAnC,OAAagC,GAClBI,MAAO,CAAEC,KAAMtB,GAAWY,SACzBM,KAHGD,EAGe,MAG9B,ECJA,EAba,WAGX,OACEP,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,qBACJE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACf,EAAW,QAIpB,C,uBChBA,SAASwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOvB,GAEP,YADAiB,EAAOjB,EAET,CACIsB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASnD,EAAkB2D,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAO7C,UACT,OAAO,IAAIwC,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAG3C,MAAM4C,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CACAb,OAAMc,EACR,GACF,CACF,C","sources":["components/utils/api/Trending/getTrending.js","components/utils/api/Trending/Trending.styled.js","components/utils/api/Trending/fetchTrending.js","Pages/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getTrending = async () => {\n  \n  const API_KEY = '064bc5fa04e70ee06b5bfcffdd0028ff'\n  const query = `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  const response = await fetch(query)\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n\n  return response.json();\n};\n  \n\n\n\n\n\n","import styled from \"styled-components\";\n\n\n\n\nexport const Li = styled.li`\nlist-style: none;\n`;\n\n\n\n","\nimport { useQuery } from 'react-query'\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrending } from './getTrending'\nimport { Li } from './Trending.styled';\n\n\nexport const FetchTrends = () => {\n  const location = useLocation();\n    const { data: moviesTreading, isLoading, error } = useQuery({ queryKey: ['get'], queryFn: getTrending});\n  return <>\n\n        {error && <p>Something went wrong: {error.message}</p>}\n    {isLoading && <p>Loading...</p>}\n    {!isLoading && !error &&\n      moviesTreading.results.map(({ id, title }) =>\n      <Li key={id}>\n        <Link to={`/Movies/${id}`}\n           state={{ from: location }}\n          >{title}</Link></Li>)}\n          \n  </>\n}","// import { useEffect, useState } from \"react\";\n// import axios from 'axios'\n// import { nanoid } from \"nanoid\";\nimport { FetchTrends } from \"components/utils/api/Trending/fetchTrending\";\n\nconst Home = () => {\n  // const [topFilms, setTopFilms] = useState();\n\n  return (\n    <main>\n      <h1>Trending movies</h1>\n      <ul>\n        <FetchTrends></FetchTrends>\n      </ul>\n    </main>\n  );\n};\n\nexport default Home;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","query","response","_context","prev","next","concat","fetch","sent","ok","Error","abrupt","json","stop","apply","arguments","Li","styled","_templateObject","_taggedTemplateLiteral","FetchTrends","location","useLocation","_useQuery","useQuery","queryKey","queryFn","moviesTreading","data","isLoading","error","_jsxs","_Fragment","children","message","_jsx","results","map","id","title","Link","to","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}