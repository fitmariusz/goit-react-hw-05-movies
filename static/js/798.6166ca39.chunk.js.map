{"version":3,"file":"static/js/798.6166ca39.chunk.js","mappings":"yOAAaA,EAAa,SAAAC,GAAE,OAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAI,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGkE,MAF9E,mCAEZJ,EAAK,sCAAAK,OAAyCT,EAAE,oCAAAS,OAFpC,oCAE8EH,EAAAE,KAAA,EACzEE,MAAMN,GAAM,OAArB,IAARC,EAAQC,EAAAK,MACAC,GAAG,CAADN,EAAAE,KAAA,cACR,IAAIK,MAAM,+BAA+B,KAAD,SAAAP,EAAAQ,OAAA,SAEzCT,EAASU,QAAM,wBAAAT,EAAAU,OAAA,GAAAb,EAAA,IACvB,E,SCNYc,EAAe,SAAHC,GAAgB,IAAVlB,EAAEkB,EAAFlB,GAC3BmB,GAA4CC,EAAAA,EAAAA,UAAS,CAAEC,SAAU,CAAC,cAAeC,QAASvB,EAAWC,KAAvFuB,EAAOJ,EAAbK,KAAeC,EAASN,EAATM,UAAWC,EAAKP,EAALO,MACpC,OAAOC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACAH,IAASC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,yBAAuBH,EAAMI,WACzCL,IAAaM,EAAAA,EAAAA,KAAA,KAAAF,SAAG,gBACjBJ,IAAcC,IACbC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACDN,EAAQS,SACoB,IAA3BT,EAAQS,QAAQC,SAAgBF,EAAAA,EAAAA,KAAA,OAAAF,SAAK,6BACvCN,EAAQS,QAAQE,KAAI,SAAAC,GAAM,OACzBR,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,WAASM,EAAOC,WACpBL,EAAAA,EAAAA,KAAA,KAAAF,SAAIM,EAAOE,YAFHF,EAAOG,GAGZ,SAKb,ECLA,EAVgB,WAEZ,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,QACV,OACER,EAAAA,EAAAA,KAAA,QAAAF,UACEE,EAAAA,EAAAA,KAACd,EAAY,CAACjB,GAAIuC,KAGxB,C,uBCdA,SAASE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOxB,GAEP,YADAkB,EAAOlB,EAET,CACIuB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAAS7C,EAAkBqD,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/utils/api/getReviews.js","components/utils/api/fetchReviews.js","Pages/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const getReviews = Id => async () => {\n    const API_KEY = '064bc5fa04e70ee06b5bfcffdd0028ff'\n    // const query = `https://api.themoviedb.org/3/movie/693134/reviews?language=en-US&api_key=064bc5fa04e70ee06b5bfcffdd0028ff`\n  const query = `https://api.themoviedb.org/3/movie/${Id}/reviews?language=en-US&api_key=${API_KEY}`\n  const response = await fetch(query)\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};","import { useQuery } from \"react-query\";\nimport { getReviews } from \"./getReviews\";\n\nexport const FetchReviews = ({ Id }) => {\n    const { data: reviews, isLoading, error } = useQuery({ queryKey: ['getReviews'], queryFn: getReviews(Id)});\n  return <>\n        {error && <p>Something went wrong: {error.message}</p>}\n        {isLoading && <p>Loading...</p>}\n      {!isLoading && !error &&\n         <ul >\n      {!reviews.results ||\n        (reviews.results.length === 0 && <div>There is no reviews yet.</div>)}\n      {reviews.results.map(review => (\n        <li  key={review.id}>\n          <h3>Author: {review.author}</h3>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n            }\n        </>\n}","// import { Link } from \"react-router-dom\";\nimport { useParams} from 'react-router-dom';\n// import { useEffect, useState, Suspense } from 'react';\nimport { FetchReviews } from \"components/utils/api/fetchReviews\";\n\n\nconst Reviews = () => {\n    // const backLinkHref = location.state?.from ?? '/movies';\n    const { idMovie} = useParams();\n  return (\n    <main>\n      <FetchReviews Id={idMovie}></FetchReviews>\n    </main>\n  );\n};\n\nexport default Reviews;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["getReviews","Id","_asyncToGenerator","_regeneratorRuntime","_callee","query","response","_context","prev","next","concat","fetch","sent","ok","Error","abrupt","json","stop","FetchReviews","_ref","_useQuery","useQuery","queryKey","queryFn","reviews","data","isLoading","error","_jsxs","_Fragment","children","message","_jsx","results","length","map","review","author","content","id","idMovie","useParams","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}